/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mypackage;
import java.awt.Desktop;
import javax.swing.table.*;
import javax.swing.JOptionPane;
import java.io.File;
import java.io.*;
import java.util.logging.Logger;
import java.util.ArrayList;

/**
 *
 * @author Admin
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnGenre = new javax.swing.JButton();
        btnPrice = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jtxtName = new javax.swing.JTextField();
        jtxtname2 = new javax.swing.JTextField();
        jtxtGenre = new javax.swing.JTextField();
        jtxtRating = new javax.swing.JTextField();
        jtxtPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnImport = new javax.swing.JButton();
        btnManual = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(839, 0, -1, 721));

        btnDelete.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 640, 100, -1));

        btnUpdate.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 640, 110, -1));

        btnAdd.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 640, 110, -1));

        btnGenre.setText("Search By Genre");
        btnGenre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenreActionPerformed(evt);
            }
        });
        getContentPane().add(btnGenre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 680, 100, -1));

        btnPrice.setText("Search By Price");
        btnPrice.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriceActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 710, 100, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Indie", "Rap", "R&B", "Pop" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 680, 120, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 710, 120, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 160, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 580, 160, 10));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 160, 10));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 160, 10));
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 530, 160, 10));

        jtxtName.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jtxtName.setForeground(new java.awt.Color(0, 204, 204));
        jtxtName.setBorder(null);
        jtxtName.setOpaque(false);
        jtxtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNameActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 354, 160, 20));

        jtxtname2.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jtxtname2.setForeground(new java.awt.Color(0, 204, 204));
        jtxtname2.setBorder(null);
        jtxtname2.setOpaque(false);
        getContentPane().add(jtxtname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 404, 160, 20));

        jtxtGenre.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jtxtGenre.setForeground(new java.awt.Color(0, 204, 204));
        jtxtGenre.setBorder(null);
        jtxtGenre.setOpaque(false);
        getContentPane().add(jtxtGenre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 454, 160, 20));

        jtxtRating.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jtxtRating.setForeground(new java.awt.Color(0, 204, 204));
        jtxtRating.setBorder(null);
        jtxtRating.setOpaque(false);
        getContentPane().add(jtxtRating, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 504, 160, 20));

        jtxtPrice.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jtxtPrice.setForeground(new java.awt.Color(0, 204, 204));
        jtxtPrice.setBorder(null);
        jtxtPrice.setOpaque(false);
        getContentPane().add(jtxtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 554, 160, 20));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Album Finder");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, 230, 80));

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Price:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 560, -1, -1));

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Album Name:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, -1, -1));

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Artist Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, -1));

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Genre:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, -1, -1));

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Rating:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, -1, -1));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Downloads\\Rec\\Screenshot (1192).png")); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 270, 480, 480));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Downloads\\Rec\\vinyl.jpg")); // NOI18N
        jLabel8.setText("Album Finder");
        jLabel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, 490, 480));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Album Name", "Artist Name", "Genre","Rating", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 740, 90));

        btnImport.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnImport.setText("Import Data From Text File");
        btnImport.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });
        getContentPane().add(btnImport, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));

        btnManual.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnManual.setText("User Manual");
        btnManual.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManualActionPerformed(evt);
            }
        });
        getContentPane().add(btnManual, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 160, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        //code to update the values in the table
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        if(jTable1.getSelectedRowCount() == 1){
            
            String Name = jtxtName.getText();
            String name2 = jtxtname2.getText();
            String Genre = jtxtGenre.getText();
            String Rating = jtxtRating.getText();
            String Price = jtxtPrice.getText();
            
            tblModel.setValueAt(Name, jTable1.getSelectedRow(), 0);
            tblModel.setValueAt(name2, jTable1.getSelectedRow(), 1);
            tblModel.setValueAt(Genre, jTable1.getSelectedRow(), 2);
            tblModel.setValueAt(Rating, jTable1.getSelectedRow(), 3);
            tblModel.setValueAt(Price, jTable1.getSelectedRow(), 4);
            
            JOptionPane.showMessageDialog(this, "Updated the data successfully!!");
        }else{
            if(jTable1.getRowCount() ==0){
                //if the table is not filled
                JOptionPane.showMessageDialog(this, "The Table is Empty!!");
            }else{
                //if multiple rows are selected
                JOptionPane.showMessageDialog(this, "Select a single row to update!!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jtxtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        //code to add the data in the table
        if(jtxtName.getText().equals("")||jtxtname2.getText().equals("")||jtxtGenre.getText().equals("")||jtxtRating.getText().equals("")||jtxtPrice.getText().equals("")){ 
        }else{
            String data[] = {jtxtName.getText(),jtxtname2.getText(),jtxtGenre.getText(),jtxtRating.getText(),jtxtPrice.getText()};
            
            DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
            tblModel.addRow(data);
            JOptionPane.showMessageDialog(this,"Added Data Successfully!!");
            jtxtName.setText("");
            jtxtname2.setText("");
            jtxtGenre.setText("");
            jtxtRating.setText("");
            jtxtPrice.setText("");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        String tblName = tblModel.getValueAt(jTable1.getSelectedRow(),0).toString();
        String tblname2 = tblModel.getValueAt(jTable1.getSelectedRow(),1).toString();
        String tblGenre = tblModel.getValueAt(jTable1.getSelectedRow(),2).toString();
        String tblRating = tblModel.getValueAt(jTable1.getSelectedRow(),3).toString();
        String tblPrice = tblModel.getValueAt(jTable1.getSelectedRow(),4).toString();
        
        jtxtName.setText(tblName);
        jtxtname2.setText(tblname2);
        jtxtGenre.setText(tblGenre);
        jtxtRating.setText(tblRating);
        jtxtPrice.setText(tblPrice);
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        //jtable model
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
       //code to delete row
       if(jTable1.getSelectedRowCount()==1){
           //delete if single row is selected
           tblModel.removeRow(jTable1.getSelectedRow());
           
       }else{
           if(jTable1.getRowCount()==0){
               //if table is empty
               JOptionPane.showMessageDialog(this, "Table is Empty!!");
           }else{
               //if row is not selected or multiple rows are selected
               JOptionPane.showMessageDialog(this, "Select a single row!!");
           }
       }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        
        
 try {
            String filePath = "RECORD.txt";
            File file = new File(filePath);
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setColumnIdentifiers(columnsName);
            
            // get lines from txt file
            Object[] tableLines = br.lines().toArray();
            
            // extratct data from lines
            // set data to jtable model
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);
            }
            
            
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, "Successfully imported!!");
            }  
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnPriceActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        ArrayList<String> aAlbumName = new ArrayList();
        ArrayList<String> aArtistName = new ArrayList();
        ArrayList<String> aGenre = new ArrayList();
        ArrayList<Integer> aRating = new ArrayList();
        ArrayList<Integer> aPrice = new ArrayList();

        int rowCount = jTable1.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String mAlbumName = (String) jTable1.getValueAt(i, 0);
            String mArtistName = (String) jTable1.getValueAt(i, 1);
            String mGenre = (String) jTable1.getValueAt(i, 2);
            String mPrice = (String) jTable1.getValueAt(i, 3);
            String mRating = (String) jTable1.getValueAt(i, 4);
            
            if(mAlbumName != null && mArtistName != null && mGenre!=null && mPrice != null && mRating != null){ 
                aAlbumName.add(mAlbumName);
                aArtistName.add(mArtistName);
                aGenre.add(mGenre);
                aRating.add(Integer.parseInt(mPrice.trim()));
                aPrice.add(Integer.parseInt(mRating.trim()));
                
            }
        }

        for (int i = 0; i < aPrice.size(); i++) {
            int min = i;
            for (int j = i + 1; j < aPrice.size(); j++) {
                // for the string data we need to use: a[k].compareTo( a[min] ) > 0
                    if (aPrice.get(j) < aPrice.get(min)) {
                        min = j;
                    }
                }

            // swapping array values
            int priceTemp = aPrice.get(min);
            aPrice.set(min, aPrice.get(i));
            aPrice.set(i, priceTemp);
         
            int ratingTemp = aRating.get(min);
            aRating.set(min, aRating.get(i));
            aRating.set(i, ratingTemp);

            String albumNameTemp = aAlbumName.get(min);
            aAlbumName.set(min, aAlbumName.get(i));
            aAlbumName.set(i, albumNameTemp);

            String artistNameTemp = aArtistName.get(min);
            aArtistName.set(min, aArtistName.get(i));
            aArtistName.set(i, artistNameTemp);
            
            String genreTemp = aGenre.get(min);
            aGenre.set(min, aGenre.get(i));
            aGenre.set(i, genreTemp);

        }
// binary search
        int val = Integer.parseInt(jTextField1.getText());
        int low = 0;
        int high = aPrice.size();
        int output = binSearch(aPrice, low, high, val);

        if(output == -1){
            System.out.println("Value not found");
        }else{

            String getAlbumName = aAlbumName.get(output);
            String getArtistName = aArtistName.get(output);
            String getGenre = aGenre.get(output);
            int getPrice = aPrice.get(output);
            int getRating = aRating.get(output);
            
            JOptionPane.showMessageDialog(this, "Album found: "+ getAlbumName + " | " + getArtistName + " | "+ getGenre + " | "+ getPrice + " | "+ getRating);
        }
    }                                             

    public int binSearch(ArrayList<Integer> a, int low, int high, int val){
        int mid = (low+high)/2;
        if(low>high){
            return -1;
        }
        if(a.get(mid) == val){
            return mid;
        }else if(val<a.get(mid)){
            return binSearch(a, low, mid-1, val);
        }else{
            return binSearch(a, mid+1, high, val);
        }
    
    }                                        

    private void btnGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenreActionPerformed
        // TODO add your handling code here:
        try{
        ArrayList<String> aAlbumName = new ArrayList();
        ArrayList<String> aArtistName = new ArrayList();
        ArrayList<String> aGenre = new ArrayList();
        ArrayList<Integer> aRating = new ArrayList();
        ArrayList<Integer> aPrice = new ArrayList();

        int rowCount = jTable1.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String mAlbumName = (String) jTable1.getValueAt(i, 0);
            String mArtistName = (String) jTable1.getValueAt(i, 1);
            String mGenre = (String) jTable1.getValueAt(i, 2);
            String mPrice = (String) jTable1.getValueAt(i, 3);
            String mRating = (String) jTable1.getValueAt(i, 4);
            
            if(mAlbumName != null && mArtistName != null && mGenre!=null && mPrice != null && mRating != null){ 
                aAlbumName.add(mAlbumName.trim());
                aArtistName.add(mArtistName.trim());
                aGenre.add(mGenre.trim());
                aRating.add(Integer.parseInt(mPrice.trim()));
                aPrice.add(Integer.parseInt(mRating.trim()));
                
            }
        }

        String item = jComboBox1.getSelectedItem().toString();
        ArrayList<Integer> value = linearSearch(aGenre,item);
        String itemsFound = " ";
        
        for (int i: value){
            System.out.println("Upper:" + i);
            itemsFound += aAlbumName.get(i);
        }
        
        JOptionPane.showMessageDialog(this,"Album found:" + itemsFound);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }
        
        
    }//GEN-LAST:event_btnGenreActionPerformed
    public ArrayList linearSearch(ArrayList<String> alist, String item) {
        
        String searchItem = item;
        System.out.println(alist.size());
        ArrayList <Integer> output = new ArrayList();

        for (int i = 0; i < alist.size(); i++) {

            if (alist.get(i).compareTo(searchItem) == 0) {
                output.add(i);
                
            }
           
        }
        System.out.println("The size of output:" + output.size());
        return output;

    }
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
                
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManualActionPerformed
        // TODO add your handling code here:
        //giving the path of the pdf file
        try{
            File file = new File("User Manual.pdf");
            if(file.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(file);
                }else{
                    JOptionPane.showMessageDialog(this, "The file is not supported!!");
                }
                
            }else{
                JOptionPane.showMessageDialog(this, "The File doesn't exist");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnManualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGenre;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnManual;
    private javax.swing.JButton btnPrice;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jtxtGenre;
    private javax.swing.JTextField jtxtName;
    private javax.swing.JTextField jtxtPrice;
    private javax.swing.JTextField jtxtRating;
    private javax.swing.JTextField jtxtname2;
    // End of variables declaration//GEN-END:variables
}
